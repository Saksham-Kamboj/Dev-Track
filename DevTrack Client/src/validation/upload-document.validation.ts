import * as z from "zod";
import { VALIDATION_MESSAGES } from "@/constants";
import { UPLOAD_FILE_CONSTANTS } from "@/constants/forms/upload-document.constants";

export const uploadDocumentFormSchema = z.object({
  file: z
    .instanceof(File, { message: VALIDATION_MESSAGES.UPLOAD_DOCUMENT.FILE.REQUIRED })
    .refine((file) => file.size > 0, VALIDATION_MESSAGES.UPLOAD_DOCUMENT.FILE.EMPTY)
    .refine(
      (file) => file.size <= UPLOAD_FILE_CONSTANTS.MAX_FILE_SIZE,
      VALIDATION_MESSAGES.UPLOAD_DOCUMENT.FILE.SIZE_LIMIT
    )
    .refine(
      (file) => {
        return UPLOAD_FILE_CONSTANTS.ALLOWED_FILE_TYPES.includes(file.type as any);
      },
      VALIDATION_MESSAGES.UPLOAD_DOCUMENT.FILE.TYPE_NOT_SUPPORTED
    ),

  title: z
    .string()
    .min(1, VALIDATION_MESSAGES.UPLOAD_DOCUMENT.TITLE.REQUIRED)
    .max(UPLOAD_FILE_CONSTANTS.TITLE_MAX_LENGTH, VALIDATION_MESSAGES.UPLOAD_DOCUMENT.TITLE.MAX_LENGTH),

  document_type: z
    .string()
    .min(1, VALIDATION_MESSAGES.UPLOAD_DOCUMENT.DOCUMENT_TYPE.REQUIRED),

  document_category: z
    .string()
    .min(1, VALIDATION_MESSAGES.UPLOAD_DOCUMENT.DOCUMENT_CATEGORY.REQUIRED),

  classification_level: z
    .string()
    .min(1, VALIDATION_MESSAGES.UPLOAD_DOCUMENT.CLASSIFICATION_LEVEL.REQUIRED),

  origin: z
    .string()
    .min(1, VALIDATION_MESSAGES.UPLOAD_DOCUMENT.ORIGIN.REQUIRED)
    .max(UPLOAD_FILE_CONSTANTS.ORIGIN_MAX_LENGTH, VALIDATION_MESSAGES.UPLOAD_DOCUMENT.ORIGIN.MAX_LENGTH),

  source: z
    .string()
    .min(1, VALIDATION_MESSAGES.UPLOAD_DOCUMENT.SOURCE.REQUIRED)
    .max(UPLOAD_FILE_CONSTANTS.SOURCE_MAX_LENGTH, VALIDATION_MESSAGES.UPLOAD_DOCUMENT.SOURCE.MAX_LENGTH),

  executive_summary: z
    .string()
    .min(1, VALIDATION_MESSAGES.UPLOAD_DOCUMENT.EXECUTIVE_SUMMARY.REQUIRED)
    .max(UPLOAD_FILE_CONSTANTS.EXECUTIVE_SUMMARY_MAX_LENGTH, VALIDATION_MESSAGES.UPLOAD_DOCUMENT.EXECUTIVE_SUMMARY.MAX_LENGTH),

  detailed_description: z
    .string()
    .min(1, VALIDATION_MESSAGES.UPLOAD_DOCUMENT.DETAILED_DESCRIPTION.REQUIRED)
    .max(UPLOAD_FILE_CONSTANTS.DETAILED_DESCRIPTION_MAX_LENGTH, VALIDATION_MESSAGES.UPLOAD_DOCUMENT.DETAILED_DESCRIPTION.MAX_LENGTH),

  related_topics: z
    .array(z.string())
    .min(UPLOAD_FILE_CONSTANTS.MIN_TOPICS, VALIDATION_MESSAGES.UPLOAD_DOCUMENT.RELATED_TOPICS.MIN_SELECTION)
    .max(UPLOAD_FILE_CONSTANTS.MAX_TOPICS, VALIDATION_MESSAGES.UPLOAD_DOCUMENT.RELATED_TOPICS.MAX_SELECTION),

  source_severity: z
    .number()
    .min(UPLOAD_FILE_CONSTANTS.MIN_SEVERITY, VALIDATION_MESSAGES.UPLOAD_DOCUMENT.SOURCE_SEVERITY.RANGE)
    .max(UPLOAD_FILE_CONSTANTS.MAX_SEVERITY, VALIDATION_MESSAGES.UPLOAD_DOCUMENT.SOURCE_SEVERITY.RANGE),

  review_severity: z
    .number()
    .min(UPLOAD_FILE_CONSTANTS.MIN_SEVERITY, VALIDATION_MESSAGES.UPLOAD_DOCUMENT.REVIEW_SEVERITY.RANGE)
    .max(UPLOAD_FILE_CONSTANTS.MAX_SEVERITY, VALIDATION_MESSAGES.UPLOAD_DOCUMENT.REVIEW_SEVERITY.RANGE),
});

export type UploadDocumentFormValues = z.infer<typeof uploadDocumentFormSchema>;
